name: Publish iOS to Firebase
on:
  push:
    branches:
      - develop

jobs:
  build:
    name: Build
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup xcode-select
        uses: devbotsxyz/xcode-select@v1

      - name: Install cocoapods-generate
        run: gem install cocoapods-generate

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Build KMM project
        run: ./gradlew assembleDebug

      - name: Fix
        run: ./gradlew generateDummyFramework

      - name: Pod Install
        run: pod install --project-directory=iosApp

      - name: Build Archive
        run: xcodebuild -workspace iosApp/iosApp.xcworkspace -scheme iosApp clean archive -archivePath iosApp/Publishing/iosApp.xcarchive -allowProvisioningUpdates

      - name: Export Archive to IPA
        run: xcodebuild -exportArchive -archivePath iosApp/Publishing/iosApp.xcarchive -exportOptionsPlist iosApp/Publishing/ExportOptions.plist -exportPath iosApp/Publishing/exportedApp

      - name: Archive Artifact
        uses: actions/upload-artifact@master
        with:
          name: iosApp.ipa
          path: iosApp/Publishing/exportedApp/iosApp.ipa

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: iosApp.ipa

      - name: Publish to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.2
        with:
          appId: ${{secrets.FIREBASE_IOS_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: Internal
          file: iosApp.ipa
          debug: true